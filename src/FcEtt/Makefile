## Paths to executables. Do not include options here.
## Modify these to suit your Coq installation, if necessary.

COQC = coqc
COQDEP = coqdep

## Include directories, one per line.

INCDIRS = \
        . \
        ../metalib \

OTT_SOURCE = ett
OTT_LOC    = ../../spec
FILES      = ett_ott ett_inf

## Library name used for the imports in Coq

LIBNAME=FcEtt
METALIBLOCATION=../metalib
LNGEN=lngen


## Name of the submakefile generated by coq_makefile
COQMKFILENAME=CoqSrc.mk


VFILES   = $(foreach i, $(FILES), $(i).v)
VOFILES  = $(foreach i, $(FILES), $(i).vo)
INCFLAGS = $(foreach i, $(INCDIRS), -I $(i))
SPEC = $(OTT_LOC)/spec.mng
SPECFILE = $(OTT_LOC)/spec.tex
OTTFILES   = $(foreach i, $(OTT_SOURCE), $(OTT_LOC)/$(i).ott)
OTTIFLAGS  = $(foreach i, $(OTT_SOURCE), -i $(OTT_LOC)/$(i).ott) -merge true
RULESFILE = $(OTT_LOC)/ett-rules.tex 



.SECONDARY: $(VFILES)

METALIBFILES= $(METALIBLOCATION)/*.v  $(METALIBLOCATION)/Makefile  $(METALIBLOCATION)/README.txt

all: coq


spec.pdf: $(OTT_LOC)/$(OTT_SOURCE).ott $(SPEC) $(SPECFILE)
	ott $(OTTIFLAGS) \
	    -tex_wrap false -tex_show_meta false -tex_filter $(SPEC) $(SPECFILE)
	(cd $(OTT_LOC); pdflatex -interaction nonstopmode spec.tex)


$(RULESFILE) : $(OTTFILES)
	ott $(OTTIFLAGS) -o $(RULESFILE) \
	          -tex_wrap false \
		  -tex_show_meta false


quick:  $(COQMKFILENAME)
	@$(MAKE) -f CoqSrc.mk quick

# quick has been deprecated
# use vos to compile without checking proofs
vos: $(COQMKFILENAME)
	@$(MAKE) -f CoqSrc.mk vos

coq: $(COQMKFILENAME)
	@$(MAKE) -f CoqSrc.mk

%.vos: %.v
	@$(MAKE) -f CoqSrc.mk $*.vos

%.vo: %.v
	@$(MAKE) -f CoqSrc.mk $*.vo


%_ott.v: $(OTT_LOC)/%.ott Makefile
	ott -i $(OTT_LOC)/$*.ott -o $*_ott.v -coq_lngen true
	make METALIB.FIX_$*_ott


%_inf.v: $(OTT_LOC)/%.ott Makefile
	$(LNGEN) --coq-no-proofs --coq $*_inf.v --coq-ott $*_ott $(OTT_LOC)/$*.ott
	make METALIB.FIX_$*_inf

$(COQMKFILENAME): Makefile $(shell ls *.v | grep -v _ott.v | grep -v _inf.v)
	{ echo "-R . $(LIBNAME) " ; ls *.v ; } > _CoqProject && coq_makefile -arg '-w -variable-collision,-meta-collision,-require-in-module' -f _CoqProject -o $(COQMKFILENAME)

# Target to be called with some filename appended to it
# It is a quick hack to fix the imports to metalib
METALIB.FIX_%:
	# sed -i -e 's/Metatheory/Metalib.Metatheory/g' $*.v
	# sed -i -e 's/LibLNgen/Metalib.LibLNgen/g' $*.v
	sed -i -e '/ott_list_core/d' $*.v
	sed -i -e '/Require Import List/d' $*.v
	sed '1d' $*.v > __TMP__; mv __TMP__ $*.v

coqclean:
	rm -if *.v.d *.vo *.glob $(VOFILES) $(COQMKFILENAME)

clean: coqclean
